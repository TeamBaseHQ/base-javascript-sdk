{"version":3,"sources":["file:///app.bundle.js","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\models\\User.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\models\\BaseCollection.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\models\\BaseModel.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\auth\\AccessToken.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\http\\clients\\AxiosHttpClient.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\http\\handlers\\AxiosResponseHandler.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\services\\UserService.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\services\\ChannelService.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\models\\Channel.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\services\\TeamService.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\models\\Team.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\services\\MessageService.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\models\\Message.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\services\\ThreadService.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\models\\Thread.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\index.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\Base.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\services\\TeamMemberService.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\services\\ChannelMemberService.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\BaseApp.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\http\\index.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\http\\clients\\index.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\http\\handlers\\index.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\models\\index.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\auth\\index.ts","file:///C:\\Users\\kunal\\www\\base\\base-javascript-sdk\\src\\services\\index.ts"],"names":["webpackJsonp","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","BaseModel_1","User","_super","data","_this","call","name","email","is_verified","getName","setName","getEmail","setEmail","isVerified","setIsVerified","default","BaseCollection","responseData","type","collectionData","map","itemData","factory","setData","setLinks","links","setMeta","meta","getData","getLinks","getMeta","BaseModel","id","created_at","updated_at","getId","setId","getCreated_at","setCreated_at","getUpdated_at","setUpdated_at","AccessToken","access_token","expires_in","refresh_token","getAccessToken","setAccessToken","getExpiresIn","setExpiresIn","getRefreshToken","setRefreshToken","toString","AxiosResponseHandler_1","AxiosHttpClient","client","get","url","params","handle","post","put","patch","del","delete","setHeaders","headers","key","defaults","getHeaders","addHeader","AxiosResponseHandler","response","User_1","UserService","base","makeUser","makeUserFromResponse","getUser","then","getCurrentUser","createUser","password","updateUser","uploadProfilePicture","picture","file","Channel_1","BaseCollection_1","ChannelService","makeChannelFromResponse","makeChannel","makeCollectionFromResponse","getChannel","team","slug","createChannel","description","color","is_private","updateChannel","getAllChannels","page","limit","deleteChannel","Channel","user_id","team_id","owner","getDescription","setDescription","getColor","setColor","getType","setType","getUser_id","setUser_id","getTeam_id","setTeam_id","getSlug","setSlug","getOwner","setOwner","Team_1","TeamService","makeTeamFromResponse","makeTeam","getTeam","createTeam","updateTeam","getAllTeams","deleteTeam","Team","invitation_code","getInvitation_code","setInvitation_code","Message_1","MessageService","makeMessageFromResponse","makeMessage","getMessage","channel","thread","createMessage","content","updateMessage","getAllMessages","deleteMessage","Message","thread_id","sender_id","sender_type","sender","getSender","setSender","getContent","setContent","getThread_id","setThread_id","getSender_id","setSender_id","getSender_type","setSender_type","Thread_1","ThreadService","makeThreadFromResponse","makeThread","getThread","createThread","subject","updateThread","getAllThreads","deleteThread","Thread","channel_id","getSubject","setSubject","getChannel_id","setChannel_id","Base_1","Base","BaseApp_1","BaseApp","Http","Models","Auth","Services","axios_1","AccessToken_1","AxiosHttpClient_1","UserService_1","ChannelService_1","TeamService_1","MessageService_1","ThreadService_1","TeamMemberService_1","ChannelMemberService_1","baseApp","httpClient","bootstrapServices","userServiceObj","teamServiceObj","channelServiceObj","teamMemberServiceObj","channelMemberServiceObj","messageServiceObj","threadServiceObj","getHttpClient","setHttpClient","getApp","setApp","endpoint","prepare","buildUrl","addAuthHeaders","getClientId","getClientSecret","accessToken","getApiUrl","concat","getUserAccessToken","userService","channelService","teamService","threadService","messageService","channelMemberService","teamMemberService","TeamMemberService","getTeamMember","getAllTeamMembers","addTeamMember","removeTeamMember","ChannelMemberService","getChannelMember","getAllChannelMembers","addChannelMember","removeChannelMember","clientId","clientSecret","apiUrl","setApiUrl","setClientId","setClientSecret","secret","token","clients_1","clients","handlers_1","handlers"],"mappings":"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","file":"app.bundle.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseModel_1 = __webpack_require__(3);\r\nvar User = /** @class */ (function (_super) {\r\n    __extends(User, _super);\r\n    function User(data) {\r\n        var _this = _super.call(this, data) || this;\r\n        _this.name = data.name;\r\n        _this.email = data.email;\r\n        _this.is_verified = data.is_verified;\r\n        return _this;\r\n    }\r\n    User.prototype.getName = function () {\r\n        return this.name;\r\n    };\r\n    User.prototype.setName = function (name) {\r\n        this.name = name;\r\n        return this;\r\n    };\r\n    User.prototype.getEmail = function () {\r\n        return this.email;\r\n    };\r\n    User.prototype.setEmail = function (email) {\r\n        this.email = email;\r\n        return this;\r\n    };\r\n    User.prototype.isVerified = function () {\r\n        return this.is_verified;\r\n    };\r\n    User.prototype.setIsVerified = function (is_verified) {\r\n        this.is_verified = is_verified;\r\n        return this;\r\n    };\r\n    return User;\r\n}(BaseModel_1.default));\r\nexports.default = User;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseCollection = /** @class */ (function () {\r\n    function BaseCollection(responseData, type) {\r\n        var data = responseData.data ? responseData.data : {};\r\n        var collectionData = data.map(function (itemData) {\r\n            return BaseCollection.factory(type, itemData);\r\n        });\r\n        this.setData(collectionData)\r\n            .setLinks(responseData.links)\r\n            .setMeta(responseData.meta);\r\n    }\r\n    /**\r\n     * Set data.\r\n     *\r\n     * @param {T[]} data\r\n     * @return {BaseCollection<T>}\r\n     */\r\n    BaseCollection.prototype.setData = function (data) {\r\n        this.data = data;\r\n        return this;\r\n    };\r\n    /**\r\n     * Get data.\r\n     * @return {T[]}\r\n     */\r\n    BaseCollection.prototype.getData = function () {\r\n        return this.data;\r\n    };\r\n    /**\r\n     * Set links.\r\n     *\r\n     * @param {Object} links\r\n     * @return {BaseCollection<T>}\r\n     */\r\n    BaseCollection.prototype.setLinks = function (links) {\r\n        this.links = links;\r\n        return this;\r\n    };\r\n    /**\r\n     * Get links.\r\n     * @return {Object}\r\n     */\r\n    BaseCollection.prototype.getLinks = function () {\r\n        return this.links;\r\n    };\r\n    /**\r\n     * Set meta.\r\n     *\r\n     * @param {Object} meta\r\n     * @return {BaseCollection<T>}\r\n     */\r\n    BaseCollection.prototype.setMeta = function (meta) {\r\n        this.meta = meta;\r\n        return this;\r\n    };\r\n    /**\r\n     * Get meta.\r\n     * @return {Object}\r\n     */\r\n    BaseCollection.prototype.getMeta = function () {\r\n        return this.meta;\r\n    };\r\n    /**\r\n     * Model Factory.\r\n     *\r\n     * @param type\r\n     * @param data\r\n     * @return {T}\r\n     */\r\n    BaseCollection.factory = function (type, data) {\r\n        return new type(data);\r\n    };\r\n    return BaseCollection;\r\n}());\r\nexports.default = BaseCollection;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseModel = /** @class */ (function () {\r\n    function BaseModel(data) {\r\n        this.id = data.id;\r\n        this.created_at = data.created_at;\r\n        this.updated_at = data.updated_at;\r\n    }\r\n    BaseModel.prototype.getId = function () {\r\n        return this.id;\r\n    };\r\n    BaseModel.prototype.setId = function (id) {\r\n        this.id = id;\r\n        return this;\r\n    };\r\n    BaseModel.prototype.getCreated_at = function () {\r\n        return this.created_at;\r\n    };\r\n    BaseModel.prototype.setCreated_at = function (created_at) {\r\n        this.created_at = created_at;\r\n        return this;\r\n    };\r\n    BaseModel.prototype.getUpdated_at = function () {\r\n        return this.updated_at;\r\n    };\r\n    BaseModel.prototype.setUpdated_at = function (updated_at) {\r\n        this.updated_at = updated_at;\r\n        return this;\r\n    };\r\n    return BaseModel;\r\n}());\r\nexports.default = BaseModel;\r\n\n\n/***/ }),\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AccessToken = /** @class */ (function () {\r\n    function AccessToken(access_token, expires_in, refresh_token) {\r\n        this.access_token = access_token;\r\n        this.expires_in = expires_in;\r\n        this.refresh_token = refresh_token;\r\n        //\r\n    }\r\n    AccessToken.prototype.getAccessToken = function () {\r\n        return this.access_token;\r\n    };\r\n    AccessToken.prototype.setAccessToken = function (access_token) {\r\n        this.access_token = access_token;\r\n        return this;\r\n    };\r\n    AccessToken.prototype.getExpiresIn = function () {\r\n        return this.expires_in;\r\n    };\r\n    AccessToken.prototype.setExpiresIn = function (expires_in) {\r\n        this.expires_in = expires_in;\r\n        return this;\r\n    };\r\n    AccessToken.prototype.getRefreshToken = function () {\r\n        return this.refresh_token;\r\n    };\r\n    AccessToken.prototype.setRefreshToken = function (refresh_token) {\r\n        this.refresh_token = refresh_token;\r\n        return this;\r\n    };\r\n    AccessToken.prototype.toString = function () {\r\n        return this.getAccessToken();\r\n    };\r\n    return AccessToken;\r\n}());\r\nexports.default = AccessToken;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AxiosResponseHandler_1 = __webpack_require__(13);\r\nvar AxiosHttpClient = /** @class */ (function () {\r\n    function AxiosHttpClient(client) {\r\n        this.client = client;\r\n        //\r\n    }\r\n    AxiosHttpClient.prototype.get = function (url, params) {\r\n        return AxiosResponseHandler_1.default.handle(this.client\r\n            .get(url, params));\r\n    };\r\n    AxiosHttpClient.prototype.post = function (url, params) {\r\n        return AxiosResponseHandler_1.default.handle(this.client\r\n            .post(url, params));\r\n    };\r\n    AxiosHttpClient.prototype.put = function (url, params) {\r\n        return AxiosResponseHandler_1.default.handle(this.client\r\n            .put(url, params));\r\n    };\r\n    AxiosHttpClient.prototype.patch = function (url, params) {\r\n        return AxiosResponseHandler_1.default.handle(this.client\r\n            .patch(url, params));\r\n    };\r\n    AxiosHttpClient.prototype.del = function (url, params) {\r\n        return AxiosResponseHandler_1.default.handle(this.client\r\n            .delete(url, params));\r\n    };\r\n    AxiosHttpClient.prototype.setHeaders = function (headers) {\r\n        for (var key in headers) {\r\n            this.client.defaults.headers[key] = headers[key];\r\n        }\r\n        return this;\r\n    };\r\n    AxiosHttpClient.prototype.getHeaders = function () {\r\n        return this.client\r\n            .defaults\r\n            .headers;\r\n    };\r\n    AxiosHttpClient.prototype.addHeader = function (key, value) {\r\n        this.client\r\n            .defaults\r\n            .headers[key] = value;\r\n        return this;\r\n    };\r\n    return AxiosHttpClient;\r\n}());\r\nexports.default = AxiosHttpClient;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AxiosResponseHandler = /** @class */ (function () {\r\n    function AxiosResponseHandler() {\r\n    }\r\n    /**\r\n     * Handle Response.\r\n     *\r\n     * @param {Promise<any>} response\r\n     * @return {Promise<any>}\r\n     */\r\n    AxiosResponseHandler.handle = function (response) {\r\n        return response;\r\n    };\r\n    return AxiosResponseHandler;\r\n}());\r\nexports.default = AxiosResponseHandler;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar User_1 = __webpack_require__(1);\r\nvar UserService = /** @class */ (function () {\r\n    function UserService(base) {\r\n        this.base = base;\r\n        //\r\n    }\r\n    UserService.makeUser = function (data) {\r\n        return new User_1.default(data);\r\n    };\r\n    UserService.makeUserFromResponse = function (response) {\r\n        var data = response.data ? response.data.data : {};\r\n        return UserService.makeUser(data);\r\n    };\r\n    UserService.prototype.getUser = function (id) {\r\n        return this.base.get(\"/users/\" + id).then(function (response) {\r\n            return UserService.makeUserFromResponse(response);\r\n        });\r\n    };\r\n    UserService.prototype.getCurrentUser = function () {\r\n        return this.getUser('me');\r\n    };\r\n    UserService.prototype.createUser = function (name, email, password) {\r\n        return this.base.post('/users', { name: name, email: email, password: password }).then(function (response) {\r\n            return UserService.makeUserFromResponse(response);\r\n        });\r\n    };\r\n    UserService.prototype.updateUser = function (name, email, password) {\r\n        if (name === void 0) { name = ''; }\r\n        if (email === void 0) { email = ''; }\r\n        if (password === void 0) { password = ''; }\r\n        return this.base.patch('/users/me', { name: name, email: email, password: password }).then(function (response) {\r\n            return UserService.makeUserFromResponse(response);\r\n        });\r\n    };\r\n    UserService.prototype.uploadProfilePicture = function (picture) {\r\n        return this.base.post('/users/picture', { file: picture }).then(function (response) {\r\n            return UserService.makeUserFromResponse(response);\r\n        });\r\n    };\r\n    return UserService;\r\n}());\r\nexports.default = UserService;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Channel_1 = __webpack_require__(16);\r\nvar BaseCollection_1 = __webpack_require__(2);\r\nvar ChannelService = /** @class */ (function () {\r\n    function ChannelService(base) {\r\n        this.base = base;\r\n        //\r\n    }\r\n    ChannelService.makeChannelFromResponse = function (response) {\r\n        var data = response.data ? response.data.data : {};\r\n        return ChannelService.makeChannel(data);\r\n    };\r\n    ChannelService.makeChannel = function (data) {\r\n        return new Channel_1.default(data);\r\n    };\r\n    ChannelService.makeCollectionFromResponse = function (response) {\r\n        var responseData = response.data;\r\n        return new BaseCollection_1.default(responseData, Channel_1.default);\r\n    };\r\n    /**\r\n     * Get Channel.\r\n     *\r\n     * @param {string} team\r\n     * @param {string} slug\r\n     * @return {Channel}\r\n     */\r\n    ChannelService.prototype.getChannel = function (team, slug) {\r\n        return this.base.get(\"/teams/\" + team + \"/channels/\" + slug).then(function (response) {\r\n            return ChannelService.makeChannelFromResponse(response);\r\n        });\r\n    };\r\n    /**\r\n     * Create Channel.\r\n     *\r\n     * @param {string} team\r\n     * @param {string} name\r\n     * @param {string} description\r\n     * @param color\r\n     * @param is_private\r\n     * @return {Channel}\r\n     */\r\n    ChannelService.prototype.createChannel = function (team, name, description, color, is_private) {\r\n        if (is_private === void 0) { is_private = false; }\r\n        return this.base.post(\"/teams/\" + team + \"/channels\", {\r\n            name: name, description: description, color: color, is_private: is_private,\r\n        }).then(function (response) {\r\n            return ChannelService.makeChannelFromResponse(response);\r\n        });\r\n    };\r\n    /**\r\n     * Update Channel.\r\n     *\r\n     * @param {string} team\r\n     * @param {string} slug\r\n     * @param {string} name\r\n     * @param {string} description\r\n     * @param color\r\n     * @param is_private\r\n     * @return {Channel}\r\n     */\r\n    ChannelService.prototype.updateChannel = function (team, slug, name, description, color, is_private) {\r\n        if (is_private === void 0) { is_private = false; }\r\n        return this.base.patch(\"/teams/\" + team + \"/channels/\" + slug, {\r\n            name: name, description: description, color: color, is_private: is_private,\r\n        }).then(function (response) {\r\n            return ChannelService.makeChannelFromResponse(response);\r\n        });\r\n    };\r\n    /**\r\n     * List of Channels. Paginated.\r\n     *\r\n     * @param {string} team\r\n     * @param {string} page\r\n     * @param {string} limit\r\n     * @return {Promise<BaseCollection<Channel>>}\r\n     */\r\n    ChannelService.prototype.getAllChannels = function (team, page, limit) {\r\n        if (page === void 0) { page = '1'; }\r\n        return this.base.get(\"/teams/\" + team + \"/channels\", {\r\n            page: page, limit: limit,\r\n        }).then(function (response) {\r\n            return ChannelService.makeCollectionFromResponse(response);\r\n        });\r\n    };\r\n    /**\r\n     * Delete Channel.\r\n     *\r\n     * @param {string} team\r\n     * @param {string} slug\r\n     * @return {Channel}\r\n     */\r\n    ChannelService.prototype.deleteChannel = function (team, slug) {\r\n        return this.base.del(\"/channels/\" + slug).then(function (response) {\r\n            return true;\r\n        });\r\n    };\r\n    return ChannelService;\r\n}());\r\nexports.default = ChannelService;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseModel_1 = __webpack_require__(3);\r\nvar User_1 = __webpack_require__(1);\r\nvar Channel = /** @class */ (function (_super) {\r\n    __extends(Channel, _super);\r\n    function Channel(data) {\r\n        var _this = _super.call(this, data) || this;\r\n        _this.name = data.name;\r\n        _this.description = data.description;\r\n        _this.color = data.color;\r\n        _this.type = data.type;\r\n        _this.user_id = data.user_id;\r\n        _this.team_id = data.team_id;\r\n        _this.owner = new User_1.default(data.owner);\r\n        _this.slug = data.slug;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return Channel Name\r\n     *\r\n     * @return {string} Name\r\n     */\r\n    Channel.prototype.getName = function () {\r\n        return this.name;\r\n    };\r\n    /**\r\n     * Set Channel Name\r\n     *\r\n     * @param {string} name\r\n     * @return {Channel}\r\n     */\r\n    Channel.prototype.setName = function (name) {\r\n        this.name = name;\r\n        return this;\r\n    };\r\n    /**\r\n     * Return Channel Description\r\n     *\r\n     * @return {string} Description\r\n     */\r\n    Channel.prototype.getDescription = function () {\r\n        return this.description;\r\n    };\r\n    /**\r\n     * Set Channel Description\r\n     *\r\n     * @param {string} description\r\n     * @return {Channel}\r\n     */\r\n    Channel.prototype.setDescription = function (description) {\r\n        this.description = description;\r\n        return this;\r\n    };\r\n    /**\r\n     * Return Channel Color\r\n     *\r\n     * @return {string} Color\r\n     */\r\n    Channel.prototype.getColor = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * Set Channel Color\r\n     *\r\n     * @param {string} color\r\n     * @return {Channel}\r\n     */\r\n    Channel.prototype.setColor = function (color) {\r\n        this.color = color;\r\n        return this;\r\n    };\r\n    /**\r\n     * Return Channel Type\r\n     *\r\n     * @return {string} Type\r\n     */\r\n    Channel.prototype.getType = function () {\r\n        return this.type;\r\n    };\r\n    /**\r\n     * Set Channel Type\r\n     *\r\n     * @param {string} type\r\n     * @return {Channel}\r\n     */\r\n    Channel.prototype.setType = function (type) {\r\n        this.type = type;\r\n        return this;\r\n    };\r\n    /**\r\n     * Return Channel User_id\r\n     *\r\n     * @return {number} User_id\r\n     */\r\n    Channel.prototype.getUser_id = function () {\r\n        return this.user_id;\r\n    };\r\n    /**\r\n     * Set Channel User_id\r\n     *\r\n     * @param {number} user_id\r\n     */\r\n    Channel.prototype.setUser_id = function (user_id) {\r\n        this.user_id = user_id;\r\n        return this;\r\n    };\r\n    /**\r\n     * Return Channel Team_id\r\n     *\r\n     * @return {number} Team_id\r\n     */\r\n    Channel.prototype.getTeam_id = function () {\r\n        return this.team_id;\r\n    };\r\n    /**\r\n     * Set Channel Team_id\r\n     *\r\n     * @param {number} team_id\r\n     */\r\n    Channel.prototype.setTeam_id = function (team_id) {\r\n        this.team_id = team_id;\r\n        return this;\r\n    };\r\n    /**\r\n     * Return Channel Slug\r\n     *\r\n     * @return {string} Slug\r\n     */\r\n    Channel.prototype.getSlug = function () {\r\n        return this.slug;\r\n    };\r\n    /**\r\n     * Set Channel Slug\r\n     *\r\n     * @param {string} slug\r\n     * @return {Channel}\r\n     */\r\n    Channel.prototype.setSlug = function (slug) {\r\n        this.slug = slug;\r\n        return this;\r\n    };\r\n    /**\r\n     * Get Owner.\r\n     *\r\n     * @return {User}\r\n     */\r\n    Channel.prototype.getOwner = function () {\r\n        return this.owner;\r\n    };\r\n    /**\r\n     * Set Owner.\r\n     *\r\n     * @param {User} owner\r\n     */\r\n    Channel.prototype.setOwner = function (owner) {\r\n        this.owner = owner;\r\n    };\r\n    return Channel;\r\n}(BaseModel_1.default));\r\nexports.default = Channel;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Team_1 = __webpack_require__(18);\r\nvar BaseCollection_1 = __webpack_require__(2);\r\nvar TeamService = /** @class */ (function () {\r\n    function TeamService(base) {\r\n        this.base = base;\r\n        //\r\n    }\r\n    TeamService.makeTeamFromResponse = function (response) {\r\n        var data = response.data ? response.data.data : {};\r\n        return TeamService.makeTeam(data);\r\n    };\r\n    TeamService.makeTeam = function (data) {\r\n        return new Team_1.default(data);\r\n    };\r\n    TeamService.makeCollectionFromResponse = function (response) {\r\n        var responseData = response.data;\r\n        return new BaseCollection_1.default(responseData, Team_1.default);\r\n    };\r\n    /**\r\n     * Get Team.\r\n     *\r\n     * @param {string} slug\r\n     * @return {Team}\r\n     */\r\n    TeamService.prototype.getTeam = function (slug) {\r\n        return this.base.get(\"/teams/\" + slug).then(function (response) {\r\n            return TeamService.makeTeamFromResponse(response);\r\n        });\r\n    };\r\n    /**\r\n     * Create Team.\r\n     *\r\n     * @param {string} name\r\n     * @param {string} description\r\n     * @return {Team}\r\n     */\r\n    TeamService.prototype.createTeam = function (name, description) {\r\n        return this.base.post(\"/teams\", { name: name, description: description }).then(function (response) {\r\n            return TeamService.makeTeamFromResponse(response);\r\n        });\r\n    };\r\n    /**\r\n     * Update Team.\r\n     *\r\n     * @param {string} slug\r\n     * @param {string} name\r\n     * @param {string} description\r\n     * @return {Team}\r\n     */\r\n    TeamService.prototype.updateTeam = function (slug, name, description) {\r\n        return this.base.patch(\"/teams/\" + slug, { name: name, description: description }).then(function (response) {\r\n            return TeamService.makeTeamFromResponse(response);\r\n        });\r\n    };\r\n    /**\r\n     * List of Teams. Paginated.\r\n     *\r\n     * @param {string} page\r\n     * @param {string} limit\r\n     * @return {Promise<BaseCollection<Team>>}\r\n     */\r\n    TeamService.prototype.getAllTeams = function (page, limit) {\r\n        if (page === void 0) { page = '0'; }\r\n        return this.base.get(\"/teams\", { page: page, limit: limit }).then(function (response) {\r\n            return TeamService.makeCollectionFromResponse(response);\r\n        });\r\n    };\r\n    /**\r\n     * Delete Team.\r\n     *\r\n     * @param {string} slug\r\n     * @return {Team}\r\n     */\r\n    TeamService.prototype.deleteTeam = function (slug) {\r\n        return this.base.del(\"/teams/\" + slug).then(function (response) {\r\n            return true;\r\n        });\r\n    };\r\n    return TeamService;\r\n}());\r\nexports.default = TeamService;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseModel_1 = __webpack_require__(3);\r\nvar Team = /** @class */ (function (_super) {\r\n    __extends(Team, _super);\r\n    function Team(data) {\r\n        var _this = _super.call(this, data) || this;\r\n        _this.name = data.name;\r\n        _this.description = data.description;\r\n        _this.invitation_code = data.invitation_code;\r\n        _this.user_id = data.user_id;\r\n        _this.owner = data.owner;\r\n        _this.slug = data.slug;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Return User Name\r\n     *\r\n     * @return {string} Name\r\n     */\r\n    Team.prototype.getName = function () {\r\n        return this.name;\r\n    };\r\n    /**\r\n     * User Name\r\n     *\r\n     * @param {string} name\r\n     * @return\r\n     * @return {Team}\r\n     */\r\n    Team.prototype.setName = function (name) {\r\n        this.name = name;\r\n        return this;\r\n    };\r\n    /**\r\n     * Return User Description\r\n     *\r\n     * @return {string} Description\r\n     */\r\n    Team.prototype.getDescription = function () {\r\n        return this.description;\r\n    };\r\n    /**\r\n     * User Description\r\n     *\r\n     * @param {string} description\r\n     * @return\r\n     * @return {Team}\r\n     */\r\n    Team.prototype.setDescription = function (description) {\r\n        this.description = description;\r\n        return this;\r\n    };\r\n    /**\r\n     * Return User Invitation_code\r\n     *\r\n     * @return {string} Invitation_code\r\n     */\r\n    Team.prototype.getInvitation_code = function () {\r\n        return this.invitation_code;\r\n    };\r\n    /**\r\n     * User Invitation_code\r\n     *\r\n     * @param {string} invitation_code\r\n     * @return\r\n     * @return {Team}\r\n     */\r\n    Team.prototype.setInvitation_code = function (invitation_code) {\r\n        this.invitation_code = invitation_code;\r\n        return this;\r\n    };\r\n    /**\r\n     * Return User User_id\r\n     *\r\n     * @return {string} User_id\r\n     */\r\n    Team.prototype.getUser_id = function () {\r\n        return this.user_id;\r\n    };\r\n    /**\r\n     * User User_id\r\n     *\r\n     * @param {string} user_id\r\n     * @return\r\n     * @return {Team}\r\n     */\r\n    Team.prototype.setUser_id = function (user_id) {\r\n        this.user_id = user_id;\r\n        return this;\r\n    };\r\n    /**\r\n     * Get Owner.\r\n     *\r\n     * @return {User}\r\n     */\r\n    Team.prototype.getOwner = function () {\r\n        return this.owner;\r\n    };\r\n    /**\r\n     * Set Owner.\r\n     *\r\n     * @param {User} owner\r\n     */\r\n    Team.prototype.setOwner = function (owner) {\r\n        this.owner = owner;\r\n    };\r\n    /**\r\n     * Return User Slug\r\n     *\r\n     * @return {string} Slug\r\n     */\r\n    Team.prototype.getSlug = function () {\r\n        return this.slug;\r\n    };\r\n    /**\r\n     * User Slug\r\n     *\r\n     * @param {string} slug\r\n     * @return\r\n     * @return {Team}\r\n     */\r\n    Team.prototype.setSlug = function (slug) {\r\n        this.slug = slug;\r\n        return this;\r\n    };\r\n    return Team;\r\n}(BaseModel_1.default));\r\nexports.default = Team;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Message_1 = __webpack_require__(20);\r\nvar BaseCollection_1 = __webpack_require__(2);\r\nvar MessageService = /** @class */ (function () {\r\n    function MessageService(base) {\r\n        this.base = base;\r\n        //\r\n    }\r\n    MessageService.makeMessageFromResponse = function (response) {\r\n        var data = response.data ? response.data.data : {};\r\n        return MessageService.makeMessage(data);\r\n    };\r\n    MessageService.makeMessage = function (data) {\r\n        return new Message_1.default(data);\r\n    };\r\n    MessageService.makeCollectionFromResponse = function (response) {\r\n        var responseData = response.data;\r\n        return new BaseCollection_1.default(responseData, Message_1.default);\r\n    };\r\n    /**\r\n     * Get Message.\r\n     *\r\n     * @param {string} team\r\n     * @param channel\r\n     * @param thread\r\n     * @param {string} slug\r\n     * @return {Message}\r\n     */\r\n    MessageService.prototype.getMessage = function (team, channel, thread, slug) {\r\n        return this.base.get(\"/teams/\" + team + \"/channels/\" + channel + \"/threads/\" + thread + \"/messages/\" + slug)\r\n            .then(function (response) {\r\n            return MessageService.makeMessageFromResponse(response);\r\n        });\r\n    };\r\n    /**\r\n     * Create Message.\r\n     *\r\n     * @param {string} team\r\n     * @param channel\r\n     * @param thread\r\n     * @param {string} content\r\n     * @param {string} type\r\n     * @return {Message}\r\n     */\r\n    MessageService.prototype.createMessage = function (team, channel, thread, content, type) {\r\n        return this.base.post(\"/teams/\" + team + \"/channels/\" + channel + \"/threads/\" + thread, {\r\n            content: content, type: type,\r\n        }).then(function (response) { return MessageService.makeMessageFromResponse(response); });\r\n    };\r\n    /**\r\n     * Update Message.\r\n     *\r\n     * @param {string} team\r\n     * @param channel\r\n     * @param thread\r\n     * @param {string} slug\r\n     * @param {string} content\r\n     * @param {string} type\r\n     * @return {Message}\r\n     */\r\n    MessageService.prototype.updateMessage = function (team, channel, thread, slug, content, type) {\r\n        return this.base.patch(\"/teams/\" + team + \"/channels/\" + channel + \"/threads/\" + thread + \"/messages/\" + slug, {\r\n            content: content, type: type,\r\n        }).then(function (response) { return MessageService.makeMessageFromResponse(response); });\r\n    };\r\n    /**\r\n     * List of Messages. Paginated.\r\n     *\r\n     * @param {string} team\r\n     * @param channel\r\n     * @param thread\r\n     * @param {string} page\r\n     * @param {string} limit\r\n     * @return {Promise<BaseCollection<Message>>}\r\n     */\r\n    MessageService.prototype.getAllMessages = function (team, channel, thread, page, limit) {\r\n        if (page === void 0) { page = '1'; }\r\n        return this.base.get(\"/teams/\" + team + \"/channels/\" + channel + \"/threads/\" + thread, {\r\n            page: page, limit: limit,\r\n        }).then(function (response) { return MessageService.makeCollectionFromResponse(response); });\r\n    };\r\n    /**\r\n     * Delete Message.\r\n     *\r\n     * @param {string} team\r\n     * @param channel\r\n     * @param thread\r\n     * @param {string} slug\r\n     * @return {Message}\r\n     */\r\n    MessageService.prototype.deleteMessage = function (team, channel, thread, slug) {\r\n        return this.base.del(\"/channels/\" + channel + \"/threads/\" + thread + \"/messages/\" + slug)\r\n            .then(function (response) {\r\n            return true;\r\n        });\r\n    };\r\n    return MessageService;\r\n}());\r\nexports.default = MessageService;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar User_1 = __webpack_require__(1);\r\nvar BaseModel_1 = __webpack_require__(3);\r\nvar Message = /** @class */ (function (_super) {\r\n    __extends(Message, _super);\r\n    function Message(data) {\r\n        var _this = _super.call(this, data) || this;\r\n        _this.content = data.content;\r\n        _this.type = data.type;\r\n        _this.thread_id = data.thread_id;\r\n        _this.sender_id = data.sender_id;\r\n        _this.sender_type = data.sender_type;\r\n        _this.slug = data.slug;\r\n        _this.sender = new User_1.default(data.sender);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get Message Sender\r\n     *\r\n     * @return {User} User\r\n     */\r\n    Message.prototype.getSender = function () {\r\n        return this.sender;\r\n    };\r\n    /**\r\n     * Set Message Sender\r\n     *\r\n     * @param {User} sender\r\n     * @return\r\n     * @return {Message}\r\n     */\r\n    Message.prototype.setSender = function (sender) {\r\n        this.sender = sender;\r\n        return this;\r\n    };\r\n    /**\r\n     * Message Content\r\n     *\r\n     * @return {string} Content\r\n     */\r\n    Message.prototype.getContent = function () {\r\n        return this.content;\r\n    };\r\n    /**\r\n     * Set Message Content\r\n     *\r\n     * @param {string} content\r\n     * @return\r\n     * @return {Message}\r\n     */\r\n    Message.prototype.setContent = function (content) {\r\n        this.content = content;\r\n        return this;\r\n    };\r\n    /**\r\n     * Message Type\r\n     *\r\n     * @return {string} Type\r\n     */\r\n    Message.prototype.getType = function () {\r\n        return this.type;\r\n    };\r\n    /**\r\n     * Set Message Type\r\n     *\r\n     * @param {string} type\r\n     * @return\r\n     * @return {Message}\r\n     */\r\n    Message.prototype.setType = function (type) {\r\n        this.type = type;\r\n        return this;\r\n    };\r\n    /**\r\n     * Message Thread_id\r\n     *\r\n     * @return {string} Thread_id\r\n     */\r\n    Message.prototype.getThread_id = function () {\r\n        return this.thread_id;\r\n    };\r\n    /**\r\n     * Set Message Thread_id\r\n     *\r\n     * @param {string} thread_id\r\n     * @return\r\n     * @return {Message}\r\n     */\r\n    Message.prototype.setThread_id = function (thread_id) {\r\n        this.thread_id = thread_id;\r\n        return this;\r\n    };\r\n    /**\r\n     * Message Sender_id\r\n     *\r\n     * @return {string} Sender_id\r\n     */\r\n    Message.prototype.getSender_id = function () {\r\n        return this.sender_id;\r\n    };\r\n    /**\r\n     * Set Message Sender_id\r\n     *\r\n     * @param {string} sender_id\r\n     * @return\r\n     * @return {Message}\r\n     */\r\n    Message.prototype.setSender_id = function (sender_id) {\r\n        this.sender_id = sender_id;\r\n        return this;\r\n    };\r\n    /**\r\n     * Message Sender_type\r\n     *\r\n     * @return {string} Sender_type\r\n     */\r\n    Message.prototype.getSender_type = function () {\r\n        return this.sender_type;\r\n    };\r\n    /**\r\n     * Set Message Sender_type\r\n     *\r\n     * @param {string} sender_type\r\n     * @return\r\n     * @return {Message}\r\n     */\r\n    Message.prototype.setSender_type = function (sender_type) {\r\n        this.sender_type = sender_type;\r\n        return this;\r\n    };\r\n    /**\r\n     * Message Slug\r\n     *\r\n     * @return {string} Slug\r\n     */\r\n    Message.prototype.getSlug = function () {\r\n        return this.slug;\r\n    };\r\n    /**\r\n     * Set Message Slug\r\n     *\r\n     * @param {string} slug\r\n     * @return\r\n     * @return {Message}\r\n     */\r\n    Message.prototype.setSlug = function (slug) {\r\n        this.slug = slug;\r\n        return this;\r\n    };\r\n    return Message;\r\n}(BaseModel_1.default));\r\nexports.default = Message;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Thread_1 = __webpack_require__(22);\r\nvar BaseCollection_1 = __webpack_require__(2);\r\nvar ThreadService = /** @class */ (function () {\r\n    function ThreadService(base) {\r\n        this.base = base;\r\n        //\r\n    }\r\n    ThreadService.makeThreadFromResponse = function (response) {\r\n        var data = response.data ? response.data.data : {};\r\n        return ThreadService.makeThread(data);\r\n    };\r\n    ThreadService.makeThread = function (data) {\r\n        return new Thread_1.default(data);\r\n    };\r\n    ThreadService.makeCollectionFromResponse = function (response) {\r\n        var responseData = response.data;\r\n        return new BaseCollection_1.default(responseData, Thread_1.default);\r\n    };\r\n    /**\r\n     * Get Thread.\r\n     *\r\n     * @param {string} team\r\n     * @param {string} slug\r\n     * @return {Thread}\r\n     */\r\n    ThreadService.prototype.getThread = function (team, channel, slug) {\r\n        return this.base.get(\"/teams/\" + team + \"/channels/\" + channel + \"/threads/\" + slug)\r\n            .then(function (response) {\r\n            return ThreadService.makeThreadFromResponse(response);\r\n        });\r\n    };\r\n    /**\r\n     * Create Thread.\r\n     *\r\n     * @param {string} team\r\n     * @param channel\r\n     * @param {string} subject\r\n     * @param {string} description\r\n     * @return {Thread}\r\n     */\r\n    ThreadService.prototype.createThread = function (team, channel, subject, description) {\r\n        return this.base.post(\"/teams/\" + team + \"/channels/\" + channel + \"/threads\", {\r\n            subject: subject, description: description,\r\n        }).then(function (response) {\r\n            return ThreadService.makeThreadFromResponse(response);\r\n        });\r\n    };\r\n    /**\r\n     * Update Thread.\r\n     *\r\n     * @param {string} team\r\n     * @param channel\r\n     * @param {string} slug\r\n     * @param {string} subject\r\n     * @param {string} description\r\n     * @return {Thread}\r\n     */\r\n    ThreadService.prototype.updateThread = function (team, channel, slug, subject, description) {\r\n        return this.base.patch(\"/teams/\" + team + \"/channels/\" + channel + \"/threads/\" + slug, {\r\n            subject: subject, description: description,\r\n        }).then(function (response) {\r\n            return ThreadService.makeThreadFromResponse(response);\r\n        });\r\n    };\r\n    /**\r\n     * List of Threads. Paginated.\r\n     *\r\n     * @param {string} team\r\n     * @param channel\r\n     * @param {string} page\r\n     * @param {string} limit\r\n     * @return {Promise<BaseCollection<Thread>>}\r\n     */\r\n    ThreadService.prototype.getAllThreads = function (team, channel, page, limit) {\r\n        if (page === void 0) { page = '1'; }\r\n        return this.base.get(\"/teams/\" + team + \"/channels/\" + channel + \"/threads\", {\r\n            page: page, limit: limit,\r\n        }).then(function (response) {\r\n            return ThreadService.makeCollectionFromResponse(response);\r\n        });\r\n    };\r\n    /**\r\n     * Delete Thread.\r\n     *\r\n     * @param {string} team\r\n     * @param channel\r\n     * @param {string} slug\r\n     * @return {Thread}\r\n     */\r\n    ThreadService.prototype.deleteThread = function (team, channel, slug) {\r\n        return this.base.del(\"/channels/\" + channel + \"/threads/\" + slug)\r\n            .then(function (response) {\r\n            return true;\r\n        });\r\n    };\r\n    return ThreadService;\r\n}());\r\nexports.default = ThreadService;\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseModel_1 = __webpack_require__(3);\r\nvar User_1 = __webpack_require__(1);\r\nvar Thread = /** @class */ (function (_super) {\r\n    __extends(Thread, _super);\r\n    function Thread(data) {\r\n        var _this = _super.call(this, data) || this;\r\n        _this.subject = data.subject;\r\n        _this.description = data.description;\r\n        _this.user_id = data.user_id;\r\n        _this.channel_id = data.channel_id;\r\n        _this.slug = data.slug;\r\n        _this.owner = new User_1.default(data.owner);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Get Thread Owner\r\n     *\r\n     * @return User\r\n     */\r\n    Thread.prototype.getOwner = function () {\r\n        return this.owner;\r\n    };\r\n    /**\r\n     * Set Thread Owner\r\n     *\r\n     * @param owner\r\n     * @return\r\n     */\r\n    Thread.prototype.setOwner = function (owner) {\r\n        this.owner = owner;\r\n        return this;\r\n    };\r\n    /**\r\n     * Return Thread Subject\r\n     *\r\n     * @return Subject\r\n     */\r\n    Thread.prototype.getSubject = function () {\r\n        return this.subject;\r\n    };\r\n    /**\r\n     * Thread Subject\r\n     *\r\n     * @param subject\r\n     * @return\r\n     */\r\n    Thread.prototype.setSubject = function (subject) {\r\n        this.subject = subject;\r\n        return this;\r\n    };\r\n    /**\r\n     * Return Thread Description\r\n     *\r\n     * @return Description\r\n     */\r\n    Thread.prototype.getDescription = function () {\r\n        return this.description;\r\n    };\r\n    /**\r\n     * Thread Description\r\n     *\r\n     * @param description\r\n     * @return\r\n     */\r\n    Thread.prototype.setDescription = function (description) {\r\n        this.description = description;\r\n        return this;\r\n    };\r\n    /**\r\n     * Return Thread User_id\r\n     *\r\n     * @return User_id\r\n     */\r\n    Thread.prototype.getUser_id = function () {\r\n        return this.user_id;\r\n    };\r\n    /**\r\n     * Thread User_id\r\n     *\r\n     * @param user_id\r\n     * @return\r\n     */\r\n    Thread.prototype.setUser_id = function (user_id) {\r\n        this.user_id = user_id;\r\n        return this;\r\n    };\r\n    /**\r\n     * Return Thread Channel_id\r\n     *\r\n     * @return Channel_id\r\n     */\r\n    Thread.prototype.getChannel_id = function () {\r\n        return this.channel_id;\r\n    };\r\n    /**\r\n     * Thread Channel_id\r\n     *\r\n     * @param channel_id\r\n     * @return\r\n     */\r\n    Thread.prototype.setChannel_id = function (channel_id) {\r\n        this.channel_id = channel_id;\r\n        return this;\r\n    };\r\n    /**\r\n     * Return Thread Slug\r\n     *\r\n     * @return Slug\r\n     */\r\n    Thread.prototype.getSlug = function () {\r\n        return this.slug;\r\n    };\r\n    /**\r\n     * Thread Slug\r\n     *\r\n     * @param slug\r\n     * @return\r\n     */\r\n    Thread.prototype.setSlug = function (slug) {\r\n        this.slug = slug;\r\n        return this;\r\n    };\r\n    return Thread;\r\n}(BaseModel_1.default));\r\nexports.default = Thread;\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Base_1 = __webpack_require__(24);\r\nexports.Base = Base_1.default;\r\nvar BaseApp_1 = __webpack_require__(46);\r\nexports.BaseApp = BaseApp_1.default;\r\nvar Http = __webpack_require__(47);\r\nexports.Http = Http;\r\nvar Models = __webpack_require__(50);\r\nexports.Models = Models;\r\nvar Auth = __webpack_require__(51);\r\nexports.Auth = Auth;\r\nvar Services = __webpack_require__(52);\r\nexports.Services = Services;\r\nexports.default = Base_1.default;\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar axios_1 = __webpack_require__(5);\r\nvar AccessToken_1 = __webpack_require__(11);\r\nvar AxiosHttpClient_1 = __webpack_require__(12);\r\nvar UserService_1 = __webpack_require__(14);\r\nvar ChannelService_1 = __webpack_require__(15);\r\nvar TeamService_1 = __webpack_require__(17);\r\nvar MessageService_1 = __webpack_require__(19);\r\nvar ThreadService_1 = __webpack_require__(21);\r\nvar TeamMemberService_1 = __webpack_require__(44);\r\nvar ChannelMemberService_1 = __webpack_require__(45);\r\nvar Base = /** @class */ (function () {\r\n    /**\r\n     * Create Base Client.\r\n     *\r\n     * @param {BaseApp} baseApp\r\n     * @param {HttpClientInterface} httpClient\r\n     */\r\n    function Base(baseApp, httpClient) {\r\n        this.baseApp = baseApp;\r\n        this.httpClient = httpClient;\r\n        if (!httpClient) {\r\n            this.httpClient = new AxiosHttpClient_1.default(axios_1.default.create());\r\n        }\r\n        this.bootstrapServices();\r\n    }\r\n    /**\r\n     * Bootstrap Services.\r\n     */\r\n    Base.prototype.bootstrapServices = function () {\r\n        this.userServiceObj = new UserService_1.default(this);\r\n        this.teamServiceObj = new TeamService_1.default(this);\r\n        this.channelServiceObj = new ChannelService_1.default(this);\r\n        this.teamMemberServiceObj = new TeamMemberService_1.default(this);\r\n        this.channelMemberServiceObj = new ChannelMemberService_1.default(this);\r\n        this.messageServiceObj = new MessageService_1.default(this);\r\n        this.threadServiceObj = new ThreadService_1.default(this);\r\n    };\r\n    Base.prototype.getHttpClient = function () {\r\n        return this.httpClient;\r\n    };\r\n    Base.prototype.setHttpClient = function (value) {\r\n        this.httpClient = value;\r\n    };\r\n    Base.prototype.getApp = function () {\r\n        return this.baseApp;\r\n    };\r\n    Base.prototype.setApp = function (value) {\r\n        this.baseApp = value;\r\n    };\r\n    /**\r\n     * Send a get request.\r\n     *\r\n     * @param {string} endpoint\r\n     * @param {Object} params\r\n     *\r\n     * @return {Promise<any>}\r\n     */\r\n    Base.prototype.get = function (endpoint, params) {\r\n        if (params === void 0) { params = {}; }\r\n        return this\r\n            .prepare()\r\n            .httpClient.get(this.buildUrl(endpoint), params);\r\n    };\r\n    /**\r\n     * Send a post request.\r\n     *\r\n     * @param {string} endpoint\r\n     * @param {Object} params\r\n     *\r\n     * @return {Promise<any>}\r\n     */\r\n    Base.prototype.post = function (endpoint, params) {\r\n        if (params === void 0) { params = {}; }\r\n        return this\r\n            .prepare()\r\n            .httpClient.post(this.buildUrl(endpoint), params);\r\n    };\r\n    /**\r\n     * Send a put request.\r\n     *\r\n     * @param {string} endpoint\r\n     * @param {Object} params\r\n     *\r\n     * @return {Promise<any>}\r\n     */\r\n    Base.prototype.put = function (endpoint, params) {\r\n        if (params === void 0) { params = {}; }\r\n        return this\r\n            .prepare()\r\n            .httpClient.put(this.buildUrl(endpoint), params);\r\n    };\r\n    /**\r\n     * Send a patch request.\r\n     *\r\n     * @param {string} endpoint\r\n     * @param {Object} params\r\n     *\r\n     * @return {Promise<any>}\r\n     */\r\n    Base.prototype.patch = function (endpoint, params) {\r\n        if (params === void 0) { params = {}; }\r\n        return this\r\n            .prepare()\r\n            .httpClient.patch(this.buildUrl(endpoint), params);\r\n    };\r\n    /**\r\n     * Send a del request.\r\n     *\r\n     * @param {string} endpoint\r\n     * @param {Object} params\r\n     *\r\n     * @return {Promise<any>}\r\n     */\r\n    Base.prototype.del = function (endpoint, params) {\r\n        if (params === void 0) { params = {}; }\r\n        return this\r\n            .prepare()\r\n            .httpClient.del(this.buildUrl(endpoint), params);\r\n    };\r\n    Base.prototype.prepare = function () {\r\n        this.addAuthHeaders();\r\n        return this;\r\n    };\r\n    Base.prototype.addAuthHeaders = function () {\r\n        this.httpClient\r\n            .addHeader('X-CLIENT-ID', this.getApp().getClientId())\r\n            .addHeader('X-CLIENT-SECRET', this.getApp().getClientSecret());\r\n        var accessToken = this.getApp().getAccessToken();\r\n        if (accessToken instanceof AccessToken_1.default) {\r\n            this.httpClient.addHeader('Authorization', \"Bearer \" + accessToken.getAccessToken());\r\n        }\r\n    };\r\n    Base.prototype.buildUrl = function (endpoint) {\r\n        return this.getApp().getApiUrl().concat(endpoint);\r\n    };\r\n    Base.prototype.getUserAccessToken = function (email, password) {\r\n        return this.post('/users/login', { email: email, password: password }).then(function (response) {\r\n            var data = response.data.data;\r\n            return new AccessToken_1.default(data.access_token, data.expires_in, data.refresh_token);\r\n        });\r\n    };\r\n    /**\r\n     * Get User Service object.\r\n     *\r\n     * @return {UserService}\r\n     */\r\n    Base.prototype.userService = function () {\r\n        return this.userServiceObj;\r\n    };\r\n    /**\r\n     * Get Channel Service object.\r\n     *\r\n     * @return {ChannelService}\r\n     */\r\n    Base.prototype.channelService = function () {\r\n        return this.channelServiceObj;\r\n    };\r\n    /**\r\n     * Get Team Service object.\r\n     *\r\n     * @return {TeamService}\r\n     */\r\n    Base.prototype.teamService = function () {\r\n        return this.teamServiceObj;\r\n    };\r\n    /**\r\n     * Get Thread Service object.\r\n     *\r\n     * @return {ThreadService}\r\n     */\r\n    Base.prototype.threadService = function () {\r\n        return this.threadServiceObj;\r\n    };\r\n    /**\r\n     * Get Message Service object.\r\n     *\r\n     * @return {MessageService}\r\n     */\r\n    Base.prototype.messageService = function () {\r\n        return this.messageServiceObj;\r\n    };\r\n    /**\r\n     * Get ChannelMember Service object.\r\n     *\r\n     * @return {ChannelMemberService}\r\n     */\r\n    Base.prototype.channelMemberService = function () {\r\n        return this.channelMemberServiceObj;\r\n    };\r\n    /**\r\n     * Get TeamMember Service object.\r\n     *\r\n     * @return {TeamMemberService}\r\n     */\r\n    Base.prototype.teamMemberService = function () {\r\n        return this.teamMemberServiceObj;\r\n    };\r\n    return Base;\r\n}());\r\nexports.default = Base;\r\n\n\n/***/ }),\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar User_1 = __webpack_require__(1);\r\nvar BaseCollection_1 = __webpack_require__(2);\r\nvar TeamMemberService = /** @class */ (function () {\r\n    function TeamMemberService(base) {\r\n        this.base = base;\r\n        //\r\n    }\r\n    /**\r\n     * Get Team Member.\r\n     *\r\n     * @param {string} slug\r\n     * @param {string} user_id\r\n     * @return {Promise<User>}\r\n     */\r\n    TeamMemberService.prototype.getTeamMember = function (slug, user_id) {\r\n        return this.base.get(\"/teams/\" + slug + \"/members/\" + user_id)\r\n            .then(function (response) {\r\n            return new User_1.default(response.data.data);\r\n        });\r\n    };\r\n    /**\r\n     * Get All Team Members.\r\n     *\r\n     * @param {string} slug\r\n     * @param page\r\n     * @param limit\r\n     * @return {Promise<BaseCollection<User>>}\r\n     */\r\n    TeamMemberService.prototype.getAllTeamMembers = function (slug, page, limit) {\r\n        if (page === void 0) { page = '1'; }\r\n        return this.base.get(\"/teams/\" + slug + \"/members\", { page: page, limit: limit })\r\n            .then(function (response) {\r\n            return new BaseCollection_1.default(response.data, User_1.default);\r\n        });\r\n    };\r\n    /**\r\n     * Add Team Member.\r\n     *\r\n     * @param {string} slug\r\n     * @param {string} user_id\r\n     * @return {Promise<boolean>}\r\n     */\r\n    TeamMemberService.prototype.addTeamMember = function (slug, user_id) {\r\n        return this.base.post(\"/teams/\" + slug + \"/members/\", { user_id: user_id })\r\n            .then(function (response) {\r\n            return true;\r\n        });\r\n    };\r\n    /**\r\n     * Remove Team Member.\r\n     *\r\n     * @param {string} slug\r\n     * @param {string} user_id\r\n     * @return {Promise<boolean>}\r\n     */\r\n    TeamMemberService.prototype.removeTeamMember = function (slug, user_id) {\r\n        return this.base.del(\"/teams/\" + slug + \"/members/\" + user_id)\r\n            .then(function (response) {\r\n            return true;\r\n        });\r\n    };\r\n    return TeamMemberService;\r\n}());\r\nexports.default = TeamMemberService;\r\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar User_1 = __webpack_require__(1);\r\nvar BaseCollection_1 = __webpack_require__(2);\r\nvar ChannelMemberService = /** @class */ (function () {\r\n    function ChannelMemberService(base) {\r\n        this.base = base;\r\n        //\r\n    }\r\n    /**\r\n     * Get Team Member.\r\n     *\r\n     * @param team\r\n     * @param {string} slug\r\n     * @param {string} user_id\r\n     * @return {Promise<User>}\r\n     */\r\n    ChannelMemberService.prototype.getChannelMember = function (team, slug, user_id) {\r\n        return this.base.get(\"/teams/\" + team + \"/channels/\" + slug + \"/members/\" + user_id)\r\n            .then(function (response) {\r\n            return new User_1.default(response.data.data);\r\n        });\r\n    };\r\n    /**\r\n     * Get All Team Members.\r\n     *\r\n     * @param team\r\n     * @param {string} slug\r\n     * @param page\r\n     * @param limit\r\n     * @return {Promise<BaseCollection<User>>}\r\n     */\r\n    ChannelMemberService.prototype.getAllChannelMembers = function (team, slug, page, limit) {\r\n        if (page === void 0) { page = '1'; }\r\n        return this.base.get(\"/teams/\" + team + \"/channels/\" + slug + \"/members\", { page: page, limit: limit })\r\n            .then(function (response) {\r\n            return new BaseCollection_1.default(response.data, User_1.default);\r\n        });\r\n    };\r\n    /**\r\n     * Add Team Member.\r\n     *\r\n     * @param team\r\n     * @param {string} slug\r\n     * @param {string} user_id\r\n     * @return {Promise<boolean>}\r\n     */\r\n    ChannelMemberService.prototype.addChannelMember = function (team, slug, user_id) {\r\n        return this.base.post(\"/teams/\" + team + \"/channels/\" + slug + \"/members/\", { user_id: user_id })\r\n            .then(function (response) {\r\n            return true;\r\n        });\r\n    };\r\n    /**\r\n     * Remove Team Member.\r\n     *\r\n     * @param team\r\n     * @param {string} slug\r\n     * @param {string} user_id\r\n     * @return {Promise<boolean>}\r\n     */\r\n    ChannelMemberService.prototype.removeChannelMember = function (team, slug, user_id) {\r\n        return this.base.del(\"/teams/\" + team + \"/channels/\" + slug + \"/members/\" + user_id)\r\n            .then(function (response) {\r\n            return true;\r\n        });\r\n    };\r\n    return ChannelMemberService;\r\n}());\r\nexports.default = ChannelMemberService;\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseApp = /** @class */ (function () {\r\n    function BaseApp(clientId, clientSecret, apiUrl) {\r\n        this.clientId = clientId;\r\n        this.clientSecret = clientSecret;\r\n        this.apiUrl = apiUrl;\r\n        //\r\n    }\r\n    BaseApp.prototype.getApiUrl = function () {\r\n        return this.apiUrl;\r\n    };\r\n    BaseApp.prototype.setApiUrl = function (url) {\r\n        this.apiUrl = url;\r\n        return this;\r\n    };\r\n    BaseApp.prototype.setClientId = function (id) {\r\n        this.clientId = id;\r\n        return this;\r\n    };\r\n    BaseApp.prototype.setClientSecret = function (secret) {\r\n        this.clientSecret = secret;\r\n        return this;\r\n    };\r\n    BaseApp.prototype.getClientId = function () {\r\n        return this.clientId;\r\n    };\r\n    BaseApp.prototype.getClientSecret = function () {\r\n        return this.clientSecret;\r\n    };\r\n    BaseApp.prototype.getAccessToken = function () {\r\n        return this.accessToken;\r\n    };\r\n    BaseApp.prototype.setAccessToken = function (token) {\r\n        this.accessToken = token;\r\n        return this;\r\n    };\r\n    return BaseApp;\r\n}());\r\nexports.default = BaseApp;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar clients_1 = __webpack_require__(48);\r\nexports.clients = clients_1.default;\r\nvar handlers_1 = __webpack_require__(49);\r\nexports.handlers = handlers_1.default;\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AxiosHttpClient_1 = __webpack_require__(12);\r\nexports.AxiosHttpClient = AxiosHttpClient_1.default;\r\nexports.default = AxiosHttpClient_1.default;\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AxiosResponseHandler_1 = __webpack_require__(13);\r\nexports.AxiosResponseHandler = AxiosResponseHandler_1.default;\r\nexports.default = AxiosResponseHandler_1.default;\r\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BaseModel_1 = __webpack_require__(3);\r\nexports.BaseModel = BaseModel_1.default;\r\nvar BaseCollection_1 = __webpack_require__(2);\r\nexports.BaseCollection = BaseCollection_1.default;\r\nvar User_1 = __webpack_require__(1);\r\nexports.User = User_1.default;\r\nvar Team_1 = __webpack_require__(18);\r\nexports.Team = Team_1.default;\r\nvar Channel_1 = __webpack_require__(16);\r\nexports.Channel = Channel_1.default;\r\nvar Thread_1 = __webpack_require__(22);\r\nexports.Thread = Thread_1.default;\r\nvar Message_1 = __webpack_require__(20);\r\nexports.Message = Message_1.default;\r\nexports.default = BaseModel_1.default;\r\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AccessToken_1 = __webpack_require__(11);\r\nexports.AccessToken = AccessToken_1.default;\r\nexports.default = AccessToken_1.default;\r\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar UserService_1 = __webpack_require__(14);\r\nvar TeamService_1 = __webpack_require__(17);\r\nvar ChannelService_1 = __webpack_require__(15);\r\nvar ThreadService_1 = __webpack_require__(21);\r\nvar MessageService_1 = __webpack_require__(19);\r\nexports.default = {\r\n    UserService: UserService_1.default,\r\n    TeamService: TeamService_1.default,\r\n    ChannelService: ChannelService_1.default,\r\n    ThreadService: ThreadService_1.default,\r\n    MessageService: MessageService_1.default,\r\n};\r\n\n\n/***/ })\n],[23]);\n\n\n// WEBPACK FOOTER //\n// app.bundle.js","import BaseModel from './BaseModel';\n\nexport default class User extends BaseModel {\n  /**\n   * User name.\n   */\n  name: string;\n\n  /**\n   * User email.\n   */\n  email: string;\n\n  /**\n   * Is Verified\n   */\n  is_verified: boolean;\n\n  public getName(): string {\n    return this.name;\n  }\n\n  public setName(name: string): User {\n    this.name = name;\n    return this;\n  }\n\n  public getEmail(): string {\n    return this.email;\n  }\n\n  public setEmail(email: string): User {\n    this.email = email;\n    return this;\n  }\n\n  public isVerified(): boolean {\n    return this.is_verified;\n  }\n\n  public setIsVerified(is_verified: boolean): User {\n    this.is_verified = is_verified;\n    return this;\n  }\n\n  constructor(data: any) {\n    super(data);\n    this.name = data.name;\n    this.email = data.email;\n    this.is_verified = data.is_verified;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./models/User.ts","export default class BaseCollection<T> {\n  data: T[];\n\n  links: object;\n\n  meta: object;\n\n  constructor(responseData: any, type: { new (tData: any): T }) {\n    const data = responseData.data ? responseData.data : {};\n\n    const collectionData = data.map((itemData: any) => {\n      return BaseCollection.factory(type, itemData);\n    });\n\n    this.setData(collectionData)\n      .setLinks(responseData.links)\n      .setMeta(responseData.meta);\n  }\n\n  /**\n   * Set data.\n   *\n   * @param {T[]} data\n   * @return {BaseCollection<T>}\n   */\n  public setData(data: T[]): BaseCollection<T> {\n    this.data = data;\n    return this;\n  }\n\n  /**\n   * Get data.\n   * @return {T[]}\n   */\n  public getData(): T[] {\n    return this.data;\n  }\n\n  /**\n   * Set links.\n   *\n   * @param {Object} links\n   * @return {BaseCollection<T>}\n   */\n  public setLinks(links: object): BaseCollection<T> {\n    this.links = links;\n    return this;\n  }\n\n  /**\n   * Get links.\n   * @return {Object}\n   */\n  public getLinks(): object {\n    return this.links;\n  }\n\n  /**\n   * Set meta.\n   *\n   * @param {Object} meta\n   * @return {BaseCollection<T>}\n   */\n  public setMeta(meta: object): BaseCollection<T> {\n    this.meta = meta;\n    return this;\n  }\n\n  /**\n   * Get meta.\n   * @return {Object}\n   */\n  public getMeta(): object {\n    return this.meta;\n  }\n\n  /**\n   * Model Factory.\n   *\n   * @param type\n   * @param data\n   * @return {T}\n   */\n  static factory<T>(type: { new (tData: any): T }, data: any): T {\n    return new type(data);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./models/BaseCollection.ts","export default class BaseModel {\n  /**\n   * Model id\n   */\n  id: number;\n\n  /**\n   * Model created_at\n   */\n  created_at: string;\n\n  /**\n   * Model updated_at\n   */\n  updated_at: string;\n\n  constructor(data: any) {\n    this.id = data.id;\n    this.created_at = data.created_at;\n    this.updated_at = data.updated_at;\n  }\n\n  public getId(): number {\n    return this.id;\n  }\n\n  public setId(id: number): BaseModel {\n    this.id = id;\n    return this;\n  }\n\n  public getCreated_at(): string {\n    return this.created_at;\n  }\n\n  public setCreated_at(created_at: string): BaseModel {\n    this.created_at = created_at;\n    return this;\n  }\n\n  public getUpdated_at(): string {\n    return this.updated_at;\n  }\n\n  public setUpdated_at(updated_at: string): BaseModel {\n    this.updated_at = updated_at;\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./models/BaseModel.ts","export default class AccessToken {\n\n  public constructor(public access_token?: any,\n                     public expires_in?: any,\n                     public refresh_token?: any) {\n    //\n  }\n\n  public getAccessToken(): string {\n    return this.access_token;\n  }\n\n  public setAccessToken(access_token: string): AccessToken {\n    this.access_token = access_token;\n    return this;\n  }\n\n  public getExpiresIn(): string {\n    return this.expires_in;\n  }\n\n  public setExpiresIn(expires_in: string): AccessToken {\n    this.expires_in = expires_in;\n    return this;\n  }\n\n  public getRefreshToken(): string {\n    return this.refresh_token;\n  }\n\n  public setRefreshToken(refresh_token: string): AccessToken {\n    this.refresh_token = refresh_token;\n    return this;\n  }\n\n  public toString(): string {\n    return this.getAccessToken();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./auth/AccessToken.ts","import HttpClientInterface from '../HttpClientInterface';\nimport AxiosResponseHandler from '../handlers/AxiosResponseHandler';\n\nimport {\n  AxiosInstance,\n} from 'axios';\n\nexport default class AxiosHttpClient implements HttpClientInterface {\n\n  public constructor(public client: AxiosInstance) {\n    //\n  }\n\n  public get(url: string, params: object): Promise<any> {\n    return AxiosResponseHandler.handle(this.client\n      .get(url, params));\n  }\n\n  public post(url: string, params: object): Promise<any> {\n    return AxiosResponseHandler.handle(this.client\n      .post(url, params));\n  }\n\n  public put(url: string, params: object): Promise<any> {\n    return AxiosResponseHandler.handle(this.client\n      .put(url, params));\n  }\n\n  public patch(url: string, params: object): Promise<any> {\n    return AxiosResponseHandler.handle(this.client\n      .patch(url, params));\n  }\n\n  public del(url: string, params: object): Promise<any> {\n    return AxiosResponseHandler.handle(this.client\n      .delete(url, params));\n  }\n\n  setHeaders(headers: object): HttpClientInterface {\n    for (let key in headers) {\n      this.client.defaults.headers[key] = headers[key];\n    }\n\n    return this;\n  }\n\n  getHeaders(): object {\n    return this.client\n      .defaults\n      .headers;\n  }\n\n  addHeader(key: string, value: string): HttpClientInterface {\n    this.client\n      .defaults\n      .headers[key] = value;\n\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./http/clients/AxiosHttpClient.ts","export default class AxiosResponseHandler {\n  /**\n   * Handle Response.\n   *\n   * @param {Promise<any>} response\n   * @return {Promise<any>}\n   */\n  static handle(response: Promise<any>): Promise<any> {\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./http/handlers/AxiosResponseHandler.ts","import Base from '../Base';\nimport User from '../models/User';\n\nexport default class UserService {\n  constructor(public base: Base) {\n    //\n  }\n\n  static makeUser(data: any): User {\n    return new User(data);\n  }\n\n  static makeUserFromResponse(response: any): User {\n    const data = response.data ? response.data.data : {};\n    return UserService.makeUser(data);\n  }\n\n  public getUser(id: string): Promise<User> {\n    return this.base.get(`/users/${id}`).then((response) => {\n      return UserService.makeUserFromResponse(response);\n    });\n  }\n\n  public getCurrentUser(): Promise<User> {\n    return this.getUser('me');\n  }\n\n  public createUser(name: string, email: string, password: string): Promise<User> {\n    return this.base.post('/users', {name, email, password}).then((response) => {\n      return UserService.makeUserFromResponse(response);\n    });\n  }\n\n  public updateUser(name: string = '', email: string = '', password: string = ''): Promise<User> {\n    return this.base.patch('/users/me', {name, email, password}).then((response) => {\n      return UserService.makeUserFromResponse(response);\n    });\n  }\n\n  public uploadProfilePicture(picture: File): Promise<any> {\n    return this.base.post('/users/picture', {file: picture}).then((response) => {\n      return UserService.makeUserFromResponse(response);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./services/UserService.ts","import Channel from '../models/Channel';\nimport Base from '../Base';\nimport BaseCollection from '../models/BaseCollection';\n\nexport default class ChannelService {\n  constructor(public base: Base) {\n    //\n  }\n\n  static makeChannelFromResponse(response: any): Channel {\n    const data = response.data ? response.data.data : {};\n    return ChannelService.makeChannel(data);\n  }\n\n  static makeChannel(data: any): Channel {\n    return new Channel(data);\n  }\n\n  static makeCollectionFromResponse(response: any): BaseCollection<Channel> {\n    const responseData = response.data;\n    return new BaseCollection(responseData, Channel);\n  }\n\n  /**\n   * Get Channel.\n   *\n   * @param {string} team\n   * @param {string} slug\n   * @return {Channel}\n   */\n  public getChannel(team: string, slug: string): Promise<Channel> {\n    return this.base.get(`/teams/${team}/channels/${slug}`).then((response) => {\n      return ChannelService.makeChannelFromResponse(response);\n    });\n  }\n\n  /**\n   * Create Channel.\n   *\n   * @param {string} team\n   * @param {string} name\n   * @param {string} description\n   * @param color\n   * @param is_private\n   * @return {Channel}\n   */\n  public createChannel(team: string, name: string, description?: string,\n                       color?: string, is_private: boolean = false): Promise<Channel> {\n    return this.base.post(`/teams/${team}/channels`, {\n      name, description, color, is_private,\n    }).then((response) => {\n      return ChannelService.makeChannelFromResponse(response);\n    });\n  }\n\n  /**\n   * Update Channel.\n   *\n   * @param {string} team\n   * @param {string} slug\n   * @param {string} name\n   * @param {string} description\n   * @param color\n   * @param is_private\n   * @return {Channel}\n   */\n  public updateChannel(team: string, slug: string, name?: string, description?: string,\n                       color?: string, is_private: boolean = false): Promise<Channel> {\n    return this.base.patch(`/teams/${team}/channels/${slug}`, {\n      name, description, color, is_private,\n    }).then((response) => {\n      return ChannelService.makeChannelFromResponse(response);\n    });\n  }\n\n  /**\n   * List of Channels. Paginated.\n   *\n   * @param {string} team\n   * @param {string} page\n   * @param {string} limit\n   * @return {Promise<BaseCollection<Channel>>}\n   */\n  public getAllChannels(team: string, page: string = '1',\n                        limit?: string): Promise<BaseCollection<Channel>> {\n    return this.base.get(`/teams/${team}/channels`, {\n      page, limit,\n    }).then((response) => {\n      return ChannelService.makeCollectionFromResponse(response);\n    });\n  }\n\n  /**\n   * Delete Channel.\n   *\n   * @param {string} team\n   * @param {string} slug\n   * @return {Channel}\n   */\n  public deleteChannel(team: string, slug: string): Promise<boolean> {\n    return this.base.del(`/channels/${slug}`).then((response) => {\n      return true;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./services/ChannelService.ts","import BaseModel from './BaseModel';\nimport User from './User';\n\nexport default class Channel extends BaseModel {\n  /**\n   * Channel name\n   */\n  name: string;\n\n  /**\n   * Channel description\n   */\n  description: string;\n\n  /**\n   * Channel color\n   */\n  color: string;\n\n  /**\n   * Channel type\n   */\n  type: string;\n\n  /**\n   * Channel user_id\n   */\n  user_id: number;\n\n  /**\n   * Channel team_id\n   */\n  team_id: number;\n\n  /**\n   * Channel slug\n   */\n  slug: string;\n\n  /**\n   * Team Owner.\n   */\n  owner: User;\n\n  /**\n   * Return Channel Name\n   *\n   * @return {string} Name\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * Set Channel Name\n   *\n   * @param {string} name\n   * @return {Channel}\n   */\n  public setName(name: string): Channel {\n    this.name = name;\n    return this;\n  }\n\n  /**\n   * Return Channel Description\n   *\n   * @return {string} Description\n   */\n  public getDescription(): string {\n    return this.description;\n  }\n\n  /**\n   * Set Channel Description\n   *\n   * @param {string} description\n   * @return {Channel}\n   */\n  public setDescription(description: string): Channel {\n    this.description = description;\n    return this;\n  }\n\n  /**\n   * Return Channel Color\n   *\n   * @return {string} Color\n   */\n  public getColor(): string {\n    return this.color;\n  }\n\n  /**\n   * Set Channel Color\n   *\n   * @param {string} color\n   * @return {Channel}\n   */\n  public setColor(color: string): Channel {\n    this.color = color;\n    return this;\n  }\n\n  /**\n   * Return Channel Type\n   *\n   * @return {string} Type\n   */\n  public getType(): string {\n    return this.type;\n  }\n\n  /**\n   * Set Channel Type\n   *\n   * @param {string} type\n   * @return {Channel}\n   */\n  public setType(type: string): Channel {\n    this.type = type;\n    return this;\n  }\n\n  /**\n   * Return Channel User_id\n   *\n   * @return {number} User_id\n   */\n  public getUser_id(): number {\n    return this.user_id;\n  }\n\n  /**\n   * Set Channel User_id\n   *\n   * @param {number} user_id\n   */\n  public setUser_id(user_id: number): Channel {\n    this.user_id = user_id;\n    return this;\n  }\n\n  /**\n   * Return Channel Team_id\n   *\n   * @return {number} Team_id\n   */\n  public getTeam_id(): number {\n    return this.team_id;\n  }\n\n  /**\n   * Set Channel Team_id\n   *\n   * @param {number} team_id\n   */\n  public setTeam_id(team_id: number): Channel {\n    this.team_id = team_id;\n    return this;\n  }\n\n  /**\n   * Return Channel Slug\n   *\n   * @return {string} Slug\n   */\n  public getSlug(): string {\n    return this.slug;\n  }\n\n  /**\n   * Set Channel Slug\n   *\n   * @param {string} slug\n   * @return {Channel}\n   */\n  public setSlug(slug: string): Channel {\n    this.slug = slug;\n    return this;\n  }\n\n  /**\n   * Get Owner.\n   *\n   * @return {User}\n   */\n  getOwner(): User {\n    return this.owner;\n  }\n\n  /**\n   * Set Owner.\n   *\n   * @param {User} owner\n   */\n  setOwner(owner: User) {\n    this.owner = owner;\n  }\n\n  constructor(data: any) {\n    super(data);\n    this.name = data.name;\n    this.description = data.description;\n    this.color = data.color;\n    this.type = data.type;\n    this.user_id = data.user_id;\n    this.team_id = data.team_id;\n    this.owner = new User(data.owner);\n    this.slug = data.slug;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./models/Channel.ts","import Team from '../models/Team';\nimport Base from '../Base';\nimport BaseCollection from '../models/BaseCollection';\n\nexport default class TeamService {\n  constructor(public base: Base) {\n    //\n  }\n\n  static makeTeamFromResponse(response: any): Team {\n    const data = response.data ? response.data.data : {};\n    return TeamService.makeTeam(data);\n  }\n\n  static makeTeam(data: any): Team {\n    return new Team(data);\n  }\n\n  static makeCollectionFromResponse(response: any): BaseCollection<Team> {\n    const responseData = response.data;\n    return new BaseCollection(responseData, Team);\n  }\n\n  /**\n   * Get Team.\n   *\n   * @param {string} slug\n   * @return {Team}\n   */\n  public getTeam(slug: string): Promise<Team> {\n    return this.base.get(`/teams/${slug}`).then((response) => {\n      return TeamService.makeTeamFromResponse(response);\n    });\n  }\n\n  /**\n   * Create Team.\n   *\n   * @param {string} name\n   * @param {string} description\n   * @return {Team}\n   */\n  public createTeam(name: string, description?: string): Promise<Team> {\n    return this.base.post(`/teams`, {name, description}).then((response) => {\n      return TeamService.makeTeamFromResponse(response);\n    });\n  }\n\n  /**\n   * Update Team.\n   *\n   * @param {string} slug\n   * @param {string} name\n   * @param {string} description\n   * @return {Team}\n   */\n  public updateTeam(slug: string, name?: string, description?: string): Promise<Team> {\n    return this.base.patch(`/teams/${slug}`, {name, description}).then((response) => {\n      return TeamService.makeTeamFromResponse(response);\n    });\n  }\n\n  /**\n   * List of Teams. Paginated.\n   *\n   * @param {string} page\n   * @param {string} limit\n   * @return {Promise<BaseCollection<Team>>}\n   */\n  public getAllTeams(page: string = '0', limit?: string): Promise<BaseCollection<Team>> {\n    return this.base.get(`/teams`, {page, limit}).then((response) => {\n      return TeamService.makeCollectionFromResponse(response);\n    });\n  }\n\n  /**\n   * Delete Team.\n   *\n   * @param {string} slug\n   * @return {Team}\n   */\n  public deleteTeam(slug: string): Promise<boolean> {\n    return this.base.del(`/teams/${slug}`).then((response) => {\n      return true;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./services/TeamService.ts","import BaseModel from './BaseModel';\nimport User from './User';\n\nexport default class Team extends BaseModel {\n  /**\n   * Team name.\n   */\n  name: string;\n\n  /**\n   * Team description.\n   */\n  description: string;\n\n  /**\n   * Team invitation_code.\n   */\n  invitation_code: string;\n\n  /**\n   * Team user_id.\n   */\n  user_id: string;\n\n  /**\n   * Team slug.\n   */\n  slug: string;\n\n  /**\n   * Team Owner.\n   */\n  owner: User;\n\n  /**\n   * Return User Name\n   *\n   * @return {string} Name\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * User Name\n   *\n   * @param {string} name\n   * @return\n   * @return {Team}\n   */\n  public setName(name: string): Team {\n    this.name = name;\n    return this;\n  }\n\n  /**\n   * Return User Description\n   *\n   * @return {string} Description\n   */\n  public getDescription(): string {\n    return this.description;\n  }\n\n  /**\n   * User Description\n   *\n   * @param {string} description\n   * @return\n   * @return {Team}\n   */\n  public setDescription(description: string): Team {\n    this.description = description;\n    return this;\n  }\n\n  /**\n   * Return User Invitation_code\n   *\n   * @return {string} Invitation_code\n   */\n  public getInvitation_code(): string {\n    return this.invitation_code;\n  }\n\n  /**\n   * User Invitation_code\n   *\n   * @param {string} invitation_code\n   * @return\n   * @return {Team}\n   */\n  public setInvitation_code(invitation_code: string): Team {\n    this.invitation_code = invitation_code;\n    return this;\n  }\n\n  /**\n   * Return User User_id\n   *\n   * @return {string} User_id\n   */\n  public getUser_id(): string {\n    return this.user_id;\n  }\n\n  /**\n   * User User_id\n   *\n   * @param {string} user_id\n   * @return\n   * @return {Team}\n   */\n  public setUser_id(user_id: string): Team {\n    this.user_id = user_id;\n    return this;\n  }\n\n  /**\n   * Get Owner.\n   *\n   * @return {User}\n   */\n  getOwner(): User {\n    return this.owner;\n  }\n\n  /**\n   * Set Owner.\n   *\n   * @param {User} owner\n   */\n  setOwner(owner: User) {\n    this.owner = owner;\n  }\n\n  /**\n   * Return User Slug\n   *\n   * @return {string} Slug\n   */\n  public getSlug(): string {\n    return this.slug;\n  }\n\n  /**\n   * User Slug\n   *\n   * @param {string} slug\n   * @return\n   * @return {Team}\n   */\n  public setSlug(slug: string): Team {\n    this.slug = slug;\n    return this;\n  }\n\n  constructor(data: any) {\n    super(data);\n    this.name = data.name;\n    this.description = data.description;\n    this.invitation_code = data.invitation_code;\n    this.user_id = data.user_id;\n    this.owner = data.owner;\n    this.slug = data.slug;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./models/Team.ts","import Base from '../Base';\nimport Message from '../models/Message';\nimport BaseCollection from '../models/BaseCollection';\n\nexport default class MessageService {\n  constructor(public base: Base) {\n    //\n  }\n\n  static makeMessageFromResponse(response: any): Message {\n    const data = response.data ? response.data.data : {};\n    return MessageService.makeMessage(data);\n  }\n\n  static makeMessage(data: any): Message {\n    return new Message(data);\n  }\n\n  static makeCollectionFromResponse(response: any): BaseCollection<Message> {\n    const responseData = response.data;\n    return new BaseCollection(responseData, Message);\n  }\n\n  /**\n   * Get Message.\n   *\n   * @param {string} team\n   * @param channel\n   * @param thread\n   * @param {string} slug\n   * @return {Message}\n   */\n  public getMessage(team: string, channel: string, thread: string, slug: string): Promise<Message> {\n    return this.base.get(`/teams/${team}/channels/${channel}/threads/${thread}/messages/${slug}`)\n      .then((response) => {\n        return MessageService.makeMessageFromResponse(response);\n      });\n  }\n\n  /**\n   * Create Message.\n   *\n   * @param {string} team\n   * @param channel\n   * @param thread\n   * @param {string} content\n   * @param {string} type\n   * @return {Message}\n   */\n  public createMessage(team: string, channel: string, thread: string,\n                       content: string, type?: string): Promise<Message> {\n    return this.base.post(`/teams/${team}/channels/${channel}/threads/${thread}`, {\n      content, type,\n    }).then(response => MessageService.makeMessageFromResponse(response));\n  }\n\n  /**\n   * Update Message.\n   *\n   * @param {string} team\n   * @param channel\n   * @param thread\n   * @param {string} slug\n   * @param {string} content\n   * @param {string} type\n   * @return {Message}\n   */\n  public updateMessage(team: string, channel: string, thread: string,\n                       slug: string, content?: string, type?: string): Promise<Message> {\n    return this.base.patch(\n      `/teams/${team}/channels/${channel}/threads/${thread}/messages/${slug}`, {\n        content, type,\n      }).then(response => MessageService.makeMessageFromResponse(response));\n  }\n\n  /**\n   * List of Messages. Paginated.\n   *\n   * @param {string} team\n   * @param channel\n   * @param thread\n   * @param {string} page\n   * @param {string} limit\n   * @return {Promise<BaseCollection<Message>>}\n   */\n  public getAllMessages(team: string, channel: string, thread: string,\n                        page: string = '1', limit?: string): Promise<BaseCollection<Message>> {\n    return this.base.get(`/teams/${team}/channels/${channel}/threads/${thread}`, {\n      page, limit,\n    }).then(response => MessageService.makeCollectionFromResponse(response));\n  }\n\n  /**\n   * Delete Message.\n   *\n   * @param {string} team\n   * @param channel\n   * @param thread\n   * @param {string} slug\n   * @return {Message}\n   */\n  public deleteMessage(team: string, channel: string,\n                       thread: string, slug: string): Promise<boolean> {\n    return this.base.del(`/channels/${channel}/threads/${thread}/messages/${slug}`)\n      .then((response) => {\n        return true;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./services/MessageService.ts","import User from './User';\nimport BaseModel from './BaseModel';\n\nexport default class Message extends BaseModel {\n  /**\n   * Message content\n   */\n  content: string;\n\n  /**\n   * Message type\n   */\n  type: string;\n\n  /**\n   * Message thread_id\n   */\n  thread_id: string;\n\n  /**\n   * Message sender_id\n   */\n  sender_id: string;\n\n  /**\n   * Message sender_type\n   */\n  sender_type: string;\n\n  /**\n   * Message slug\n   */\n  slug: string;\n\n  /**\n   * Message Sender\n   */\n  sender: User;\n\n  /**\n   * Get Message Sender\n   *\n   * @return {User} User\n   */\n  public getSender(): User {\n    return this.sender;\n  }\n\n  /**\n   * Set Message Sender\n   *\n   * @param {User} sender\n   * @return\n   * @return {Message}\n   */\n  public setSender(sender: User): Message {\n    this.sender = sender;\n    return this;\n  }\n\n  /**\n   * Message Content\n   *\n   * @return {string} Content\n   */\n  public getContent(): string {\n    return this.content;\n  }\n\n  /**\n   * Set Message Content\n   *\n   * @param {string} content\n   * @return\n   * @return {Message}\n   */\n  public setContent(content: string): Message {\n    this.content = content;\n    return this;\n  }\n\n  /**\n   * Message Type\n   *\n   * @return {string} Type\n   */\n  public getType(): string {\n    return this.type;\n  }\n\n  /**\n   * Set Message Type\n   *\n   * @param {string} type\n   * @return\n   * @return {Message}\n   */\n  public setType(type: string): Message {\n    this.type = type;\n    return this;\n  }\n\n  /**\n   * Message Thread_id\n   *\n   * @return {string} Thread_id\n   */\n  public getThread_id(): string {\n    return this.thread_id;\n  }\n\n  /**\n   * Set Message Thread_id\n   *\n   * @param {string} thread_id\n   * @return\n   * @return {Message}\n   */\n  public setThread_id(thread_id: string): Message {\n    this.thread_id = thread_id;\n    return this;\n  }\n\n  /**\n   * Message Sender_id\n   *\n   * @return {string} Sender_id\n   */\n  public getSender_id(): string {\n    return this.sender_id;\n  }\n\n  /**\n   * Set Message Sender_id\n   *\n   * @param {string} sender_id\n   * @return\n   * @return {Message}\n   */\n  public setSender_id(sender_id: string): Message {\n    this.sender_id = sender_id;\n    return this;\n  }\n\n  /**\n   * Message Sender_type\n   *\n   * @return {string} Sender_type\n   */\n  public getSender_type(): string {\n    return this.sender_type;\n  }\n\n  /**\n   * Set Message Sender_type\n   *\n   * @param {string} sender_type\n   * @return\n   * @return {Message}\n   */\n  public setSender_type(sender_type: string): Message {\n    this.sender_type = sender_type;\n    return this;\n  }\n\n  /**\n   * Message Slug\n   *\n   * @return {string} Slug\n   */\n  public getSlug(): string {\n    return this.slug;\n  }\n\n  /**\n   * Set Message Slug\n   *\n   * @param {string} slug\n   * @return\n   * @return {Message}\n   */\n  public setSlug(slug: string): Message {\n    this.slug = slug;\n    return this;\n  }\n\n  constructor(data: any) {\n    super(data);\n    this.content = data.content;\n    this.type = data.type;\n    this.thread_id = data.thread_id;\n    this.sender_id = data.sender_id;\n    this.sender_type = data.sender_type;\n    this.slug = data.slug;\n    this.sender = new User(data.sender);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./models/Message.ts","import Thread from '../models/Thread';\nimport Base from '../Base';\nimport BaseCollection from '../models/BaseCollection';\n\nexport default class ThreadService {\n  constructor(public base: Base) {\n    //\n  }\n\n  static makeThreadFromResponse(response: any): Thread {\n    const data = response.data ? response.data.data : {};\n    return ThreadService.makeThread(data);\n  }\n\n  static makeThread(data: any): Thread {\n    return new Thread(data);\n  }\n\n  static makeCollectionFromResponse(response: any): BaseCollection<Thread> {\n    const responseData = response.data;\n    return new BaseCollection(responseData, Thread);\n  }\n\n  /**\n   * Get Thread.\n   *\n   * @param {string} team\n   * @param {string} slug\n   * @return {Thread}\n   */\n  public getThread(team: string, channel: string, slug: string): Promise<Thread> {\n    return this.base.get(`/teams/${team}/channels/${channel}/threads/${slug}`)\n      .then((response) => {\n        return ThreadService.makeThreadFromResponse(response);\n      });\n  }\n\n  /**\n   * Create Thread.\n   *\n   * @param {string} team\n   * @param channel\n   * @param {string} subject\n   * @param {string} description\n   * @return {Thread}\n   */\n  public createThread(team: string, channel: string, subject: string, description?: string): Promise<Thread> {\n    return this.base.post(`/teams/${team}/channels/${channel}/threads`, {\n      subject, description,\n    }).then((response) => {\n      return ThreadService.makeThreadFromResponse(response);\n    });\n  }\n\n  /**\n   * Update Thread.\n   *\n   * @param {string} team\n   * @param channel\n   * @param {string} slug\n   * @param {string} subject\n   * @param {string} description\n   * @return {Thread}\n   */\n  public updateThread(team: string, channel: string, slug: string, subject?: string,\n                      description?: string): Promise<Thread> {\n    return this.base.patch(`/teams/${team}/channels/${channel}/threads/${slug}`, {\n      subject, description,\n    }).then((response) => {\n      return ThreadService.makeThreadFromResponse(response);\n    });\n  }\n\n  /**\n   * List of Threads. Paginated.\n   *\n   * @param {string} team\n   * @param channel\n   * @param {string} page\n   * @param {string} limit\n   * @return {Promise<BaseCollection<Thread>>}\n   */\n  public getAllThreads(team: string, channel: string,\n                       page: string = '1', limit?: string): Promise<BaseCollection<Thread>> {\n    return this.base.get(`/teams/${team}/channels/${channel}/threads`, {\n      page, limit,\n    }).then((response) => {\n      return ThreadService.makeCollectionFromResponse(response);\n    });\n  }\n\n  /**\n   * Delete Thread.\n   *\n   * @param {string} team\n   * @param channel\n   * @param {string} slug\n   * @return {Thread}\n   */\n  public deleteThread(team: string, channel: string, slug: string): Promise<boolean> {\n    return this.base.del(`/channels/${channel}/threads/${slug}`)\n      .then((response) => {\n        return true;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./services/ThreadService.ts","import BaseModel from './BaseModel';\nimport User from './User';\n\nexport default class Thread extends BaseModel {\n\n  /*\n   *  Thread subject\n   */\n  subject: string;\n  /*\n   *  Thread description\n   */\n  description: string;\n  /*\n   *  Thread user_id\n   */\n  user_id: string;\n  /*\n   *  Thread channel_id\n   */\n  channel_id: string;\n  /*\n   *  Thread slug\n   */\n  slug: string;\n\n  /**\n   * Thread Owner\n   */\n  owner: User;\n\n  /**\n   * Get Thread Owner\n   *\n   * @return User\n   */\n  public getOwner(): User {\n    return this.owner;\n  }\n\n  /**\n   * Set Thread Owner\n   *\n   * @param owner\n   * @return\n   */\n  public setOwner(owner: User): Thread {\n    this.owner = owner;\n    return this;\n  }\n\n  /**\n   * Return Thread Subject\n   *\n   * @return Subject\n   */\n  public getSubject(): string {\n    return this.subject;\n  }\n\n  /**\n   * Thread Subject\n   *\n   * @param subject\n   * @return\n   */\n  public setSubject(subject: string): Thread {\n    this.subject = subject;\n    return this;\n  }\n\n  /**\n   * Return Thread Description\n   *\n   * @return Description\n   */\n  public getDescription(): string {\n    return this.description;\n  }\n\n  /**\n   * Thread Description\n   *\n   * @param description\n   * @return\n   */\n  public setDescription(description: string): Thread {\n    this.description = description;\n    return this;\n  }\n\n  /**\n   * Return Thread User_id\n   *\n   * @return User_id\n   */\n  public getUser_id(): string {\n    return this.user_id;\n  }\n\n  /**\n   * Thread User_id\n   *\n   * @param user_id\n   * @return\n   */\n  public setUser_id(user_id: string): Thread {\n    this.user_id = user_id;\n    return this;\n  }\n\n  /**\n   * Return Thread Channel_id\n   *\n   * @return Channel_id\n   */\n  public getChannel_id(): string {\n    return this.channel_id;\n  }\n\n  /**\n   * Thread Channel_id\n   *\n   * @param channel_id\n   * @return\n   */\n  public setChannel_id(channel_id: string): Thread {\n    this.channel_id = channel_id;\n    return this;\n  }\n\n  /**\n   * Return Thread Slug\n   *\n   * @return Slug\n   */\n  public getSlug(): string {\n    return this.slug;\n  }\n\n  /**\n   * Thread Slug\n   *\n   * @param slug\n   * @return\n   */\n  public setSlug(slug: string): Thread {\n    this.slug = slug;\n    return this;\n  }\n\n  constructor(data: any) {\n    super(data);\n    this.subject = data.subject;\n    this.description = data.description;\n    this.user_id = data.user_id;\n    this.channel_id = data.channel_id;\n    this.slug = data.slug;\n    this.owner = new User(data.owner);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./models/Thread.ts","import Base from './Base';\nimport BaseApp from './BaseApp';\nimport * as Http from './http';\nimport * as Models from './models';\nimport * as Auth from './auth';\nimport * as Services from './services';\n\nexport {Base, BaseApp, Http, Auth, Services, Models};\nexport default Base;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./index.ts","import HttpClientInterface from './http/HttpClientInterface';\nimport axios from 'axios';\nimport BaseApp from './BaseApp';\nimport AccessToken from './auth/AccessToken';\nimport AxiosHttpClient from './http/clients/AxiosHttpClient';\nimport UserService from './services/UserService';\nimport ChannelService from './services/ChannelService';\nimport TeamService from './services/TeamService';\nimport MessageService from './services/MessageService';\nimport ThreadService from './services/ThreadService';\nimport TeamMemberService from './services/TeamMemberService';\nimport ChannelMemberService from './services/ChannelMemberService';\n\nexport default class Base {\n\n  /**\n   * User Service Object.\n   */\n  private userServiceObj: UserService;\n\n  /**\n   * Team Service Object.\n   */\n  private teamServiceObj: TeamService;\n\n  /**\n   * Channel Service Object.\n   */\n  private channelServiceObj: ChannelService;\n\n  /**\n   * TeamMember Service Object.\n   */\n  private teamMemberServiceObj: TeamMemberService;\n\n  /**\n   * ChannelMember Service Object.\n   */\n  private channelMemberServiceObj: ChannelMemberService;\n\n  /**\n   * Thread Service Object.\n   */\n  private threadServiceObj: ThreadService;\n\n  /**\n   * Message Service Object.\n   */\n  private messageServiceObj: MessageService;\n\n  /**\n   * Create Base Client.\n   *\n   * @param {BaseApp} baseApp\n   * @param {HttpClientInterface} httpClient\n   */\n  constructor(public baseApp: BaseApp, public httpClient?: HttpClientInterface) {\n    if (!httpClient) {\n      this.httpClient = new AxiosHttpClient(axios.create());\n    }\n\n    this.bootstrapServices();\n  }\n\n  /**\n   * Bootstrap Services.\n   */\n  private bootstrapServices(): void {\n    this.userServiceObj = new UserService(this);\n    this.teamServiceObj = new TeamService(this);\n    this.channelServiceObj = new ChannelService(this);\n    this.teamMemberServiceObj = new TeamMemberService(this);\n    this.channelMemberServiceObj = new ChannelMemberService(this);\n    this.messageServiceObj = new MessageService(this);\n    this.threadServiceObj = new ThreadService(this);\n  }\n\n  public getHttpClient(): HttpClientInterface {\n    return this.httpClient;\n  }\n\n  public setHttpClient(value: HttpClientInterface) {\n    this.httpClient = value;\n  }\n\n  public getApp(): BaseApp {\n    return this.baseApp;\n  }\n\n  public setApp(value: BaseApp) {\n    this.baseApp = value;\n  }\n\n  /**\n   * Send a get request.\n   *\n   * @param {string} endpoint\n   * @param {Object} params\n   *\n   * @return {Promise<any>}\n   */\n  public get(endpoint: string, params: object = {}): Promise<any> {\n    return this\n      .prepare()\n      .httpClient.get(this.buildUrl(endpoint), params);\n  }\n\n  /**\n   * Send a post request.\n   *\n   * @param {string} endpoint\n   * @param {Object} params\n   *\n   * @return {Promise<any>}\n   */\n  public post(endpoint: string, params: object = {}): Promise<any> {\n    return this\n      .prepare()\n      .httpClient.post(this.buildUrl(endpoint), params);\n  }\n\n  /**\n   * Send a put request.\n   *\n   * @param {string} endpoint\n   * @param {Object} params\n   *\n   * @return {Promise<any>}\n   */\n  public put(endpoint: string, params: object = {}): Promise<any> {\n    return this\n      .prepare()\n      .httpClient.put(this.buildUrl(endpoint), params);\n  }\n\n  /**\n   * Send a patch request.\n   *\n   * @param {string} endpoint\n   * @param {Object} params\n   *\n   * @return {Promise<any>}\n   */\n  public patch(endpoint: string, params: object = {}): Promise<any> {\n    return this\n      .prepare()\n      .httpClient.patch(this.buildUrl(endpoint), params);\n  }\n\n  /**\n   * Send a del request.\n   *\n   * @param {string} endpoint\n   * @param {Object} params\n   *\n   * @return {Promise<any>}\n   */\n  public del(endpoint: string, params: object = {}): Promise<any> {\n    return this\n      .prepare()\n      .httpClient.del(this.buildUrl(endpoint), params);\n  }\n\n  private prepare(): Base {\n    this.addAuthHeaders();\n    return this;\n  }\n\n  private addAuthHeaders(): void {\n    this.httpClient\n      .addHeader('X-CLIENT-ID', this.getApp().getClientId())\n      .addHeader('X-CLIENT-SECRET', this.getApp().getClientSecret());\n\n    const accessToken = this.getApp().getAccessToken();\n\n    if (accessToken instanceof AccessToken) {\n      this.httpClient.addHeader('Authorization', `Bearer ${accessToken.getAccessToken()}`);\n    }\n  }\n\n  private buildUrl(endpoint: string): string {\n    return this.getApp().getApiUrl().concat(endpoint);\n  }\n\n  public getUserAccessToken(email: string, password: string): Promise<AccessToken> {\n    return this.post('/users/login', {email, password}).then((response) => {\n      const data = response.data.data;\n      return new AccessToken(data.access_token, data.expires_in, data.refresh_token);\n    });\n  }\n\n  /**\n   * Get User Service object.\n   *\n   * @return {UserService}\n   */\n  public userService(): UserService {\n    return this.userServiceObj;\n  }\n\n  /**\n   * Get Channel Service object.\n   *\n   * @return {ChannelService}\n   */\n  public channelService(): ChannelService {\n    return this.channelServiceObj;\n  }\n\n  /**\n   * Get Team Service object.\n   *\n   * @return {TeamService}\n   */\n  public teamService(): TeamService {\n    return this.teamServiceObj;\n  }\n\n  /**\n   * Get Thread Service object.\n   *\n   * @return {ThreadService}\n   */\n  public threadService(): ThreadService {\n    return this.threadServiceObj;\n  }\n\n  /**\n   * Get Message Service object.\n   *\n   * @return {MessageService}\n   */\n  public messageService(): MessageService {\n    return this.messageServiceObj;\n  }\n\n  /**\n   * Get ChannelMember Service object.\n   *\n   * @return {ChannelMemberService}\n   */\n  public channelMemberService(): ChannelMemberService {\n    return this.channelMemberServiceObj;\n  }\n\n  /**\n   * Get TeamMember Service object.\n   *\n   * @return {TeamMemberService}\n   */\n  public teamMemberService(): TeamMemberService {\n    return this.teamMemberServiceObj;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./Base.ts","import Base from '../Base';\nimport User from '../models/User';\nimport BaseCollection from '../models/BaseCollection';\n\nexport default class TeamMemberService {\n  constructor(public base: Base) {\n    //\n  }\n\n  /**\n   * Get Team Member.\n   *\n   * @param {string} slug\n   * @param {string} user_id\n   * @return {Promise<User>}\n   */\n  getTeamMember(slug: string, user_id: string): Promise<User> {\n    return this.base.get(`/teams/${slug}/members/${user_id}`)\n      .then((response) => {\n        return new User(response.data.data);\n      });\n  }\n\n  /**\n   * Get All Team Members.\n   *\n   * @param {string} slug\n   * @param page\n   * @param limit\n   * @return {Promise<BaseCollection<User>>}\n   */\n  getAllTeamMembers(slug: string,\n                    page: string = '1', limit?: string): Promise<BaseCollection<User>> {\n    return this.base.get(`/teams/${slug}/members`, {page, limit})\n      .then((response) => {\n        return new BaseCollection<User>(response.data, User);\n      });\n  }\n\n  /**\n   * Add Team Member.\n   *\n   * @param {string} slug\n   * @param {string} user_id\n   * @return {Promise<boolean>}\n   */\n  addTeamMember(slug: string, user_id: string): Promise<boolean> {\n    return this.base.post(`/teams/${slug}/members/`, {user_id})\n      .then((response) => {\n        return true;\n      });\n  }\n\n  /**\n   * Remove Team Member.\n   *\n   * @param {string} slug\n   * @param {string} user_id\n   * @return {Promise<boolean>}\n   */\n  removeTeamMember(slug: string, user_id: string): Promise<boolean> {\n    return this.base.del(`/teams/${slug}/members/${user_id}`)\n      .then((response) => {\n        return true;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./services/TeamMemberService.ts","import Base from '../Base';\nimport User from '../models/User';\nimport BaseCollection from '../models/BaseCollection';\n\nexport default class ChannelMemberService {\n  constructor(public base: Base) {\n    //\n  }\n\n  /**\n   * Get Team Member.\n   *\n   * @param team\n   * @param {string} slug\n   * @param {string} user_id\n   * @return {Promise<User>}\n   */\n  getChannelMember(team: string, slug: string, user_id: string): Promise<User> {\n    return this.base.get(`/teams/${team}/channels/${slug}/members/${user_id}`)\n      .then((response) => {\n        return new User(response.data.data);\n      });\n  }\n\n  /**\n   * Get All Team Members.\n   *\n   * @param team\n   * @param {string} slug\n   * @param page\n   * @param limit\n   * @return {Promise<BaseCollection<User>>}\n   */\n  getAllChannelMembers(team: string, slug: string,\n                    page: string = '1', limit?: string): Promise<BaseCollection<User>> {\n    return this.base.get(`/teams/${team}/channels/${slug}/members`, {page, limit})\n      .then((response) => {\n        return new BaseCollection<User>(response.data, User);\n      });\n  }\n\n  /**\n   * Add Team Member.\n   *\n   * @param team\n   * @param {string} slug\n   * @param {string} user_id\n   * @return {Promise<boolean>}\n   */\n  addChannelMember(team: string, slug: string, user_id: string): Promise<boolean> {\n    return this.base.post(`/teams/${team}/channels/${slug}/members/`, {user_id})\n      .then((response) => {\n        return true;\n      });\n  }\n\n  /**\n   * Remove Team Member.\n   *\n   * @param team\n   * @param {string} slug\n   * @param {string} user_id\n   * @return {Promise<boolean>}\n   */\n  removeChannelMember(team: string, slug: string, user_id: string): Promise<boolean> {\n    return this.base.del(`/teams/${team}/channels/${slug}/members/${user_id}`)\n      .then((response) => {\n        return true;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./services/ChannelMemberService.ts","import AccessToken from './auth/AccessToken';\n\nexport default class BaseApp {\n  private accessToken: AccessToken;\n\n  public constructor(public clientId: string, public clientSecret: string, public apiUrl: string) {\n    //\n  }\n\n  public getApiUrl(): string {\n    return this.apiUrl;\n  }\n\n  public setApiUrl(url: string): BaseApp {\n    this.apiUrl = url;\n    return this;\n  }\n\n  public setClientId(id: string): BaseApp {\n    this.clientId = id;\n    return this;\n  }\n\n  public setClientSecret(secret: string): BaseApp {\n    this.clientSecret = secret;\n    return this;\n  }\n\n  public getClientId(): string {\n    return this.clientId;\n  }\n\n  public getClientSecret(): string {\n    return this.clientSecret;\n  }\n\n  public getAccessToken(): AccessToken {\n    return this.accessToken;\n  }\n\n  public setAccessToken(token: AccessToken): BaseApp {\n    this.accessToken = token;\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./BaseApp.ts","import clients from './clients';\nimport handlers from './handlers';\nimport HttpClientInterface from './HttpClientInterface';\n\nexport {clients, handlers, HttpClientInterface};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./http/index.ts","import AxiosHttpClient from './AxiosHttpClient';\n\nexport {AxiosHttpClient};\nexport default AxiosHttpClient;\n\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./http/clients/index.ts","import AxiosResponseHandler from './AxiosResponseHandler';\n\nexport {AxiosResponseHandler};\nexport default AxiosResponseHandler;\n\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./http/handlers/index.ts","import BaseModel from './BaseModel';\nimport BaseCollection from './BaseCollection';\nimport User from './User';\nimport Team from './Team';\nimport Channel from './Channel';\nimport Thread from './Thread';\nimport Message from './Message';\n\nexport {BaseModel, BaseCollection, User, Team, Channel, Thread, Message};\n\nexport default BaseModel;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./models/index.ts","import AccessToken from './AccessToken';\n\nexport {AccessToken};\n\nexport default AccessToken;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./auth/index.ts","import UserService from './UserService';\nimport TeamService from './TeamService';\nimport ChannelService from './ChannelService';\nimport ThreadService from './ThreadService';\nimport MessageService from './MessageService';\n\nexport default {\n  UserService,\n  TeamService,\n  ChannelService,\n  ThreadService,\n  MessageService,\n};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/source-map-loader!./services/index.ts"],"sourceRoot":""}